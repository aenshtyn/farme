{"remainingRequest":"/Users/aenshtyn/Desktop/Code/Personal/Projects/farm/Front/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/aenshtyn/Desktop/Code/Personal/Projects/farm/Front/src/components/Producti.vue?vue&type=style&index=0&id=64c7b48a&lang=css","dependencies":[{"path":"/Users/aenshtyn/Desktop/Code/Personal/Projects/farm/Front/src/components/Producti.vue","mtime":1655714063572},{"path":"/Users/aenshtyn/Desktop/Code/Personal/Projects/farm/Front/node_modules/css-loader/dist/cjs.js","mtime":1647800955981},{"path":"/Users/aenshtyn/Desktop/Code/Personal/Projects/farm/Front/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1647800958030},{"path":"/Users/aenshtyn/Desktop/Code/Personal/Projects/farm/Front/node_modules/postcss-loader/src/index.js","mtime":1647800957071},{"path":"/Users/aenshtyn/Desktop/Code/Personal/Projects/farm/Front/node_modules/cache-loader/dist/cjs.js","mtime":1647800955564},{"path":"/Users/aenshtyn/Desktop/Code/Personal/Projects/farm/Front/node_modules/vue-loader-v16/dist/index.js","mtime":1647800958028}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5zdWJtaXQtZm9ybSB7CiAgbWF4LXdpZHRoOiAzMDBweDsKICBtYXJnaW46IGF1dG87Cn0K"},{"version":3,"sources":["/Users/aenshtyn/Desktop/Code/Personal/Projects/farm/Front/src/components/Producti.vue"],"names":[],"mappings":";AA2GA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACd","file":"/Users/aenshtyn/Desktop/Code/Personal/Projects/farm/Front/src/components/Producti.vue","sourceRoot":"","sourcesContent":["<template>\n  <form @submit.prevent=\"saveMilk\">\n    <div class=\"submit-form\">\n      <!-- <div v-if=\"!submitted\"> -->\n    \n      <div class=\"form-group\">\n        <label for=\"day\">Day</label>\n        <input\n          type=\"date\"\n          class=\"form-control\"\n          id=\"day\"\n          required\n          v-model=\"form.day\"\n          name=\"day\"        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"owner\">Cow</label>\n        <div class=\"table\">\n          <table class=\"table\">\n            <thead>\n              <tr class=\"text-muted\">\n\n                <th scope=\"col\">Name</th>\n                <th scope=\"col\">Morning</th>\n                <th scope=\"col\">Afternoon</th>\n                <th scope=\"col\">Total</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"cow in cows\" :key=\"cow.id\" :value=\"cow.id\">\n\n                <th scope=\"row\">{{ cow.name }}</th>\n                <th scope=\"row\">\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    id=\"volume\"\n                    required\n                    v-model=\"form.volume\"\n                    name=\"volume\"\n                  />\n                </th>\n                <th scope=\"row\">\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    id=\"volume\"\n                    required\n                    v-model=\"form.volume\"\n                    name=\"volume\"\n                  />\n                </th>\n                  <th scope=\"row\">{{ cow.daily_volume }}</th>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        <span class=\"focus\"></span>\n      </div>\n      <button type=\"submit\" class=\"btn btn-success\">Submit</button>\n    </div>\n  </form>\n</template>\n\n<script>\nimport useMilks from \"../services/MilkDataService\";\nimport useCows from \"../services/AnimalDataService\";\nimport { onMounted } from \"vue\";\nimport { ref, reactive } from \"vue\";\nexport default {\n  name: \"record_milk\",\n  setup() {\n    const form = reactive({\n      milking_time: \"\",\n      day: null,\n      volume: \"\",\n      cow_id: \"\",\n    });\n\n    const cowsToggle = ref(false);\n    const { cows, getCows } = useCows();\n    const { errors, storeMilk } = useMilks();\n    //  const cows = ref([]);\n\n    const saveMilk = async () => {\n      await storeMilk({ milk: { ...form } });\n    };\n\n    const showCows = () => {\n      cowsToggle.value = !cowsToggle.value;\n    };\n\n    onMounted(getCows);\n\n    return {\n      form,\n      errors,\n      saveMilk,\n      showCows,\n      cowsToggle,\n      getCows,\n      cows,\n    };\n  },\n};\n</script>\n<style>\n.submit-form {\n  max-width: 300px;\n  margin: auto;\n}\n</style>\n"]}]}