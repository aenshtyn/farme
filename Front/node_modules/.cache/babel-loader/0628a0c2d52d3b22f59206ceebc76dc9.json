{"remainingRequest":"/Users/aenshtyn/Desktop/Code/Personal/Projects/farm/Front/node_modules/babel-loader/lib/index.js!/Users/aenshtyn/Desktop/Code/Personal/Projects/farm/Front/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/aenshtyn/Desktop/Code/Personal/Projects/farm/Front/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/aenshtyn/Desktop/Code/Personal/Projects/farm/Front/src/components/Animals/AnimalList.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/aenshtyn/Desktop/Code/Personal/Projects/farm/Front/src/components/Animals/AnimalList.vue","mtime":1655450633935},{"path":"/Users/aenshtyn/Desktop/Code/Personal/Projects/farm/Front/babel.config.js","mtime":1647800954734},{"path":"/Users/aenshtyn/Desktop/Code/Personal/Projects/farm/Front/node_modules/cache-loader/dist/cjs.js","mtime":1647800955564},{"path":"/Users/aenshtyn/Desktop/Code/Personal/Projects/farm/Front/node_modules/babel-loader/lib/index.js","mtime":1647800955438},{"path":"/Users/aenshtyn/Desktop/Code/Personal/Projects/farm/Front/node_modules/cache-loader/dist/cjs.js","mtime":1647800955564},{"path":"/Users/aenshtyn/Desktop/Code/Personal/Projects/farm/Front/node_modules/vue-loader-v16/dist/index.js","mtime":1647800958028}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9hZW5zaHR5bi9EZXNrdG9wL0NvZGUvUGVyc29uYWwvUHJvamVjdHMvZmFybS9Gcm9udC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvci5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IHVzZUNvd3MgZnJvbSAiLi4vLi4vc2VydmljZXMvQW5pbWFsRGF0YVNlcnZpY2UiOwppbXBvcnQgeyBvbk1vdW50ZWQgfSBmcm9tICJ2dWUiOwppbXBvcnQgeyByZWYgfSBmcm9tICd2dWUnOwpleHBvcnQgZGVmYXVsdCB7CiAgc2V0dXA6IGZ1bmN0aW9uIHNldHVwKCkgewogICAgdmFyIHNlbGVjdGVkID0gcmVmKCk7CgogICAgdmFyIF91c2VDb3dzID0gdXNlQ293cygpLAogICAgICAgIGNvd3MgPSBfdXNlQ293cy5jb3dzLAogICAgICAgIGdldENvd3MgPSBfdXNlQ293cy5nZXRDb3dzLAogICAgICAgIGRlc3Ryb3lDb3cgPSBfdXNlQ293cy5kZXN0cm95Q293OwoKICAgIHZhciBkZWxldGVDb3cgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICAgICB2YXIgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShpZCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGlmICh3aW5kb3cuY29uZmlybSgiWW91IHN1cmU/IikpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgICAgIHJldHVybiBkZXN0cm95Q293KGlkKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDY7CiAgICAgICAgICAgICAgICByZXR1cm4gZ2V0Q293cygpOwoKICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpOwoKICAgICAgcmV0dXJuIGZ1bmN0aW9uIGRlbGV0ZUNvdyhfeCkgewogICAgICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH07CiAgICB9KCk7CgogICAgb25Nb3VudGVkKGdldENvd3MpOwogICAgcmV0dXJuIHsKICAgICAgY293czogY293cywKICAgICAgZGVsZXRlQ293OiBkZWxldGVDb3csCiAgICAgIHNlbGVjdGVkOiBzZWxlY3RlZAogICAgfTsKICB9Cn07"},{"version":3,"mappings":";;AAgDA,OAAOA,OAAP,MAAoB,kCAApB;AACA,SAASC,SAAT,QAA0B,KAA1B;AACA,SAASC,GAAT,QAAoB,KAApB;AACA,eAAe;AACZC,OADY,mBACJ;AACP,QAAMC,QAAO,GAAIF,GAAG,EAApB;;AACA,mBAAsCF,OAAO,EAA7C;AAAA,QAAQK,IAAR,YAAQA,IAAR;AAAA,QAAcC,OAAd,YAAcA,OAAd;AAAA,QAAuBC,UAAvB,YAAuBA,UAAvB;;AAEA,QAAMC,SAAQ;AAAA,yEAAI,iBAAOC,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA,oBACXC,MAAM,CAACC,OAAP,CAAe,WAAf,CADW;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA,uBAKVJ,UAAU,CAACE,EAAD,CALA;;AAAA;AAAA;AAAA,uBAMVH,OAAO,EANG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAJ;;AAAA,sBAARE,SAAQ;AAAA;AAAA;AAAA,OAAd;;AASAP,aAAS,CAACK,OAAD,CAAT;AAEA,WAAO;AACLD,UAAI,EAAJA,IADK;AAELG,eAAS,EAATA,SAFK;AAGLJ,cAAQ,EAARA;AAHK,KAAP;AAKD;AArBY,CAAf","names":["useCows","onMounted","ref","setup","selected","cows","getCows","destroyCow","deleteCow","id","window","confirm"],"sourceRoot":"","sources":["/Users/aenshtyn/Desktop/Code/Personal/Projects/farm/Front/src/components/Animals/AnimalList.vue"],"sourcesContent":["<template>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col\">\n        <table class=\"table\">\n          <thead>\n            <tr class=\"text-muted\">\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">Name</th>\n              <th scope=\"col\">Age</th>\n              <th scope=\"col\">Breed</th>\n              <th scope=\"col\">Owner</th>\n              <th scope=\"col\">Milk</th>\n              \n             \n            </tr>\n          </thead>\n\n          <tbody>\n            <tr v-for=\"item in cows\" :key=\"item.id\">\n              <th scope=\"row\"> {{ item.id }}</th>\n              <th scope=\"row\"> {{ item.name }}</th>\n              <th scope=\"row\"> {{ item.age }} Months</th>\n              <th scope=\"row\"> {{ item.breed }}</th>\n              <th scope=\"row\"> {{ item.owner }}</th>\n              <th scope=\"row\"> {{ item.milks.volume }}</th>\n              <!-- <th scope=\"row\"> {{ item. }}</th> -->\n              <!-- <td>John Doe</td>\n              <td><input type=\"number\"           \n              name=\"name\"\n              id=\"name\"\n              required=\"\"\n              class=\"shadow-sm focus:ring-blue-500 placeholder:text-gray-400 focus:border-blue-500 block w-full sm:text-sm border-gray-300 rounded-md\"\n              placeholder=\"Enter milk volume...\"></td>\n              <td><input type=\"number\"></td>\n              <td>3</td> -->\n              <td><button type=\"button\" class=\"btn btn-sm btn-primary\" >Save</button></td>\n            </tr>\n          </tbody>\n        </table>\n\n      </div>\n    </div>\n        <!-- <button type=\"button\" class=\"btn btn-primary\">Save</button> -->\n  </div>\n\n</template>\n<script>\nimport useCows from \"../../services/AnimalDataService\";\nimport { onMounted } from \"vue\";\nimport { ref } from 'vue';\nexport default {\n   setup() {\n    const selected = ref();\n    const { cows, getCows, destroyCow } = useCows();\n\n    const deleteCow = async (id) => {\n      if (!window.confirm(\"You sure?\")) {\n        return;\n      }\n\n      await destroyCow(id);\n      await getCows();\n    };\n\n    onMounted(getCows);\n\n    return {\n      cows,\n      deleteCow,\n      selected,\n    };\n  },\n};\n</script>\n<style>\n.list {\n  text-align: left;\n  max-width: 750px;\n  margin: auto;\n}\n</style>\n"]}]}