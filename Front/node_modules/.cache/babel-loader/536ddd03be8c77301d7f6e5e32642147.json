{"remainingRequest":"/Users/aenshtyn/Desktop/Code/Personal/Projects/farm/Front/node_modules/babel-loader/lib/index.js!/Users/aenshtyn/Desktop/Code/Personal/Projects/farm/Front/node_modules/eslint-loader/index.js??ref--14-0!/Users/aenshtyn/Desktop/Code/Personal/Projects/farm/Front/src/services/MilkDataService.js","dependencies":[{"path":"/Users/aenshtyn/Desktop/Code/Personal/Projects/farm/Front/src/services/MilkDataService.js","mtime":1655195270078},{"path":"/Users/aenshtyn/Desktop/Code/Personal/Projects/farm/Front/babel.config.js","mtime":1647800954734},{"path":"/Users/aenshtyn/Desktop/Code/Personal/Projects/farm/Front/node_modules/cache-loader/dist/cjs.js","mtime":1647800955564},{"path":"/Users/aenshtyn/Desktop/Code/Personal/Projects/farm/Front/node_modules/babel-loader/lib/index.js","mtime":1647800955438},{"path":"/Users/aenshtyn/Desktop/Code/Personal/Projects/farm/Front/node_modules/eslint-loader/index.js","mtime":1647800956229}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9hZW5zaHR5bi9EZXNrdG9wL0NvZGUvUGVyc29uYWwvUHJvamVjdHMvZmFybS9Gcm9udC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvci5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IGFwaSBmcm9tICIuL2FwaSI7CmltcG9ydCB7IHJlZiB9IGZyb20gInZ1ZSI7CmltcG9ydCB7IHVzZVJvdXRlciB9IGZyb20gInZ1ZS1yb3V0ZXIiOwpleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB1c2VNaWxrcygpIHsKICB2YXIgbWlsayA9IHJlZihbXSk7CiAgdmFyIG1pbGtzID0gcmVmKFtdKTsKICB2YXIgZXJyb3JzID0gcmVmKCIiKTsKICB2YXIgcm91dGVyID0gdXNlUm91dGVyKCk7CgogIHZhciBnZXRNaWxrcyA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgICB2YXIgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgdmFyIHJlc3BvbnNlOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgcmV0dXJuIGFwaS5nZXQoIi9taWxrcyIpOwoKICAgICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICBtaWxrcy52YWx1ZSA9IHJlc3BvbnNlLmRhdGEuZGF0YTsKCiAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZSk7CiAgICB9KSk7CgogICAgcmV0dXJuIGZ1bmN0aW9uIGdldE1pbGtzKCkgewogICAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgfTsKICB9KCk7CgogIHZhciBnZXRNaWxrID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICAgIHZhciBfcmVmMiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoaWQpIHsKICAgICAgdmFyIHJlc3BvbnNlOwogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjsKICAgICAgICAgICAgICByZXR1cm4gYXBpLmdldCgiL21pbGtzLyIgKyBpZCk7CgogICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICBtaWxrLnZhbHVlID0gcmVzcG9uc2UuZGF0YS5kYXRhOwoKICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTIpOwogICAgfSkpOwoKICAgIHJldHVybiBmdW5jdGlvbiBnZXRNaWxrKF94KSB7CiAgICAgIHJldHVybiBfcmVmMi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgfTsKICB9KCk7CgogIHZhciBzdG9yZU1pbGsgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICAgdmFyIF9yZWYzID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMyhkYXRhKSB7CiAgICAgIHZhciBrZXk7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgZXJyb3JzLnZhbHVlID0gIiI7CiAgICAgICAgICAgICAgX2NvbnRleHQzLnByZXYgPSAxOwogICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gNDsKICAgICAgICAgICAgICByZXR1cm4gYXBpLnBvc3QoIi9taWxrcyIsIGRhdGEpOwoKICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gNjsKICAgICAgICAgICAgICByZXR1cm4gcm91dGVyLnB1c2goewogICAgICAgICAgICAgICAgbmFtZTogIm1pbGtzLmluZGV4IgogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMTE7CiAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgX2NvbnRleHQzLnByZXYgPSA4OwogICAgICAgICAgICAgIF9jb250ZXh0My50MCA9IF9jb250ZXh0M1siY2F0Y2giXSgxKTsKCiAgICAgICAgICAgICAgaWYgKF9jb250ZXh0My50MC5yZXNwb25zZS5zdGF0dXMgPT09IDQyMikgewogICAgICAgICAgICAgICAgZm9yIChrZXkgaW4gX2NvbnRleHQzLnQwLnJlc3BvbnNlLmRhdGEuZXJyb3JzKSB7CiAgICAgICAgICAgICAgICAgIGVycm9ycy52YWx1ZSArPSBfY29udGV4dDMudDAucmVzcG9uc2UuZGF0YS5lcnJvcnNba2V5XVswXSArICIgIjsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CgogICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSwgX2NhbGxlZTMsIG51bGwsIFtbMSwgOF1dKTsKICAgIH0pKTsKCiAgICByZXR1cm4gZnVuY3Rpb24gc3RvcmVNaWxrKF94MikgewogICAgICByZXR1cm4gX3JlZjMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH07CiAgfSgpOwoKICB2YXIgdXBkYXRlTWlsayA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgICB2YXIgX3JlZjQgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU0KGlkKSB7CiAgICAgIHZhciBrZXk7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNCQoX2NvbnRleHQ0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ0LnByZXYgPSBfY29udGV4dDQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgZXJyb3JzLnZhbHVlID0gIiI7CiAgICAgICAgICAgICAgX2NvbnRleHQ0LnByZXYgPSAxOwogICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gNDsKICAgICAgICAgICAgICByZXR1cm4gYXBpLnBhdGNoKCIvbWlsa3MvIiArIGlkLCBtaWxrLnZhbHVlKTsKCiAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDY7CiAgICAgICAgICAgICAgcmV0dXJuIHJvdXRlci5wdXNoKHsKICAgICAgICAgICAgICAgIG5hbWU6ICJtaWxrcy5pbmRleCIKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDExOwogICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgIF9jb250ZXh0NC5wcmV2ID0gODsKICAgICAgICAgICAgICBfY29udGV4dDQudDAgPSBfY29udGV4dDRbImNhdGNoIl0oMSk7CgogICAgICAgICAgICAgIGlmIChfY29udGV4dDQudDAucmVzcG9uc2Uuc3RhdHVzID09PSA0MjIpIHsKICAgICAgICAgICAgICAgIGZvciAoa2V5IGluIF9jb250ZXh0NC50MC5yZXNwb25zZS5kYXRhLmVycm9ycykgewogICAgICAgICAgICAgICAgICBlcnJvcnMudmFsdWUgKz0gX2NvbnRleHQ0LnQwLnJlc3BvbnNlLmRhdGEuZXJyb3JzW2tleV1bMF0gKyAiICI7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWU0LCBudWxsLCBbWzEsIDhdXSk7CiAgICB9KSk7CgogICAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZU1pbGsoX3gzKSB7CiAgICAgIHJldHVybiBfcmVmNC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgfTsKICB9KCk7CgogIHZhciBkZXN0cm95TWlsayA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgICB2YXIgX3JlZjUgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU1KGlkKSB7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNSQoX2NvbnRleHQ1KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ1LnByZXYgPSBfY29udGV4dDUubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgX2NvbnRleHQ1Lm5leHQgPSAyOwogICAgICAgICAgICAgIHJldHVybiBhcGkuZGVsZXRlKCcvbWlsa3MvJyArIGlkKTsKCiAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ1LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWU1KTsKICAgIH0pKTsKCiAgICByZXR1cm4gZnVuY3Rpb24gZGVzdHJveU1pbGsoX3g0KSB7CiAgICAgIHJldHVybiBfcmVmNS5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgfTsKICB9KCk7CgogIHJldHVybiB7CiAgICBlcnJvcnM6IGVycm9ycywKICAgIG1pbGs6IG1pbGssCiAgICBtaWxrczogbWlsa3MsCiAgICBnZXRNaWxrOiBnZXRNaWxrLAogICAgZ2V0TWlsa3M6IGdldE1pbGtzLAogICAgc3RvcmVNaWxrOiBzdG9yZU1pbGssCiAgICB1cGRhdGVNaWxrOiB1cGRhdGVNaWxrLAogICAgZGVzdHJveU1pbGs6IGRlc3Ryb3lNaWxrCiAgfTsKfQ=="},{"version":3,"sources":["/Users/aenshtyn/Desktop/Code/Personal/Projects/farm/Front/src/services/MilkDataService.js"],"names":["api","ref","useRouter","useMilks","milk","milks","errors","router","getMilks","get","response","value","data","getMilk","id","storeMilk","post","push","name","status","key","updateMilk","patch","destroyMilk","delete"],"mappings":"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","sourcesContent":["import api from \"./api\";\nimport { ref } from \"vue\";\nimport { useRouter } from \"vue-router\";\n\nexport default function useMilks() {\n    const milk = ref([]);\n    const milks = ref([]);\n\n    const errors = ref(\"\");\n    const router = useRouter();\n\n    const getMilks = async() => {\n        let response = await api.get(\"/milks\");\n        milks.value = response.data.data;\n    };\n\n    const getMilk = async(id) => {\n        let response = await api.get(`/milks/` + id);\n        milk.value = response.data.data;\n    };\n\n    const storeMilk = async(data) => {\n        errors.value = \"\";\n        try {\n            await api.post(\"/milks\", data);\n            await router.push({ name: \"milks.index\" });\n        } catch (e) {\n            if (e.response.status === 422) {\n                for (const key in e.response.data.errors) {\n                    errors.value += e.response.data.errors[key][0] + \" \";\n                }\n            }\n        }\n    };\n\n    const updateMilk = async(id) => {\n        errors.value = \"\";\n        try {\n            await api.patch(\"/milks/\" + id, milk.value);\n            await router.push({ name: \"milks.index\" });\n        } catch (e) {\n            if (e.response.status === 422) {\n                for (const key in e.response.data.errors) {\n                    errors.value += e.response.data.errors[key][0] + \" \";\n                }\n            }\n        }\n    };\n    const destroyMilk = async(id) => {\n        await api.delete('/milks/' + id);\n    };\n\n    return {\n        errors,\n        milk,\n        milks,\n        getMilk,\n        getMilks,\n        storeMilk,\n        updateMilk,\n        destroyMilk,\n    };\n}"]}]}