{"remainingRequest":"/Users/aenshtyn/Desktop/Code/Personal/farm/Front/node_modules/babel-loader/lib/index.js!/Users/aenshtyn/Desktop/Code/Personal/farm/Front/node_modules/eslint-loader/index.js??ref--14-0!/Users/aenshtyn/Desktop/Code/Personal/farm/Front/src/services/auth.service.js","dependencies":[{"path":"/Users/aenshtyn/Desktop/Code/Personal/farm/Front/src/services/auth.service.js","mtime":1647850559961},{"path":"/Users/aenshtyn/Desktop/Code/Personal/farm/Front/babel.config.js","mtime":1647800954734},{"path":"/Users/aenshtyn/Desktop/Code/Personal/farm/Front/node_modules/cache-loader/dist/cjs.js","mtime":1647800955564},{"path":"/Users/aenshtyn/Desktop/Code/Personal/farm/Front/node_modules/babel-loader/lib/index.js","mtime":1647800955438},{"path":"/Users/aenshtyn/Desktop/Code/Personal/farm/Front/node_modules/eslint-loader/index.js","mtime":1647800956229}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvVXNlcnMvYWVuc2h0eW4vRGVza3RvcC9Db2RlL1BlcnNvbmFsL2Zhcm0vRnJvbnQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrLmpzIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICIvVXNlcnMvYWVuc2h0eW4vRGVza3RvcC9Db2RlL1BlcnNvbmFsL2Zhcm0vRnJvbnQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuanNvbi5zdHJpbmdpZnkuanMiOwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwpheGlvcy5kZWZhdWx0cy5oZWFkZXJzLmNvbW1vbiA9IHsKICAnWC1SZXF1ZXN0ZWQtV2l0aCc6ICdYTUxIdHRwUmVxdWVzdCcsCiAgJ1gtQ1NSRi1UT0tFTic6IHdpbmRvdy5jc3JmX3Rva2VuCn07CnZhciBBUElfVVJMID0gJ2h0dHA6Ly9sb2NhbGhvc3Q6NDAwMC9hcGkvJzsKCnZhciBBdXRoU2VydmljZSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgZnVuY3Rpb24gQXV0aFNlcnZpY2UoKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQXV0aFNlcnZpY2UpOwogIH0KCiAgX2NyZWF0ZUNsYXNzKEF1dGhTZXJ2aWNlLCBbewogICAga2V5OiAibG9naW4iLAogICAgdmFsdWU6IGZ1bmN0aW9uIGxvZ2luKHVzZXIpIHsKICAgICAgcmV0dXJuIGF4aW9zLnBvc3QoQVBJX1VSTCArICdzaWduX2luJywgewogICAgICAgIGVtYWlsOiB1c2VyLmVtYWlsLAogICAgICAgIHBhc3N3b3JkOiB1c2VyLnBhc3N3b3JkCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEuYWNjZXNzVG9rZW4pIHsKICAgICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCd1c2VyJywgSlNPTi5zdHJpbmdpZnkocmVzcG9uc2UuZGF0YSkpOwogICAgICAgIH0KCiAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmRhdGE7CiAgICAgIH0pOwogICAgfQogIH0sIHsKICAgIGtleTogImxvZ291dCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gbG9nb3V0KCkgewogICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgndXNlcicpOwogICAgfQogIH0sIHsKICAgIGtleTogInJlZ2lzdGVyIiwKICAgIHZhbHVlOiBmdW5jdGlvbiByZWdpc3Rlcih1c2VyKSB7CiAgICAgIHJldHVybiBheGlvcy5wb3N0KEFQSV9VUkwgKyAncmVnaXN0ZXInLCB7CiAgICAgICAgdXNlcm5hbWU6IHVzZXIudXNlcm5hbWUsCiAgICAgICAgZW1haWw6IHVzZXIuZW1haWwsCiAgICAgICAgcGFzc3dvcmQ6IHVzZXIucGFzc3dvcmQKICAgICAgfSk7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gQXV0aFNlcnZpY2U7Cn0oKTsKCmV4cG9ydCBkZWZhdWx0IG5ldyBBdXRoU2VydmljZSgpOw=="},{"version":3,"sources":["/Users/aenshtyn/Desktop/Code/Personal/farm/Front/src/services/auth.service.js"],"names":["axios","defaults","headers","common","window","csrf_token","API_URL","AuthService","user","post","email","password","then","response","data","accessToken","localStorage","setItem","JSON","stringify","removeItem","username"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACAA,KAAK,CAACC,QAAN,CAAeC,OAAf,CAAuBC,MAAvB,GAAgC;AAC5B,sBAAoB,gBADQ;AAE5B,kBAAgBC,MAAM,CAACC;AAFK,CAAhC;AAIA,IAAMC,OAAO,GAAG,4BAAhB;;IACMC,W;;;;;;;WACF,eAAMC,IAAN,EAAY;AACR,aAAOR,KAAK,CACPS,IADE,CACGH,OAAO,GAAG,SADb,EACwB;AACvBI,QAAAA,KAAK,EAAEF,IAAI,CAACE,KADW;AAEvBC,QAAAA,QAAQ,EAAEH,IAAI,CAACG;AAFQ,OADxB,EAKFC,IALE,CAKG,UAAAC,QAAQ,EAAI;AACd,YAAIA,QAAQ,CAACC,IAAT,CAAcC,WAAlB,EAA+B;AAC3BC,UAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeN,QAAQ,CAACC,IAAxB,CAA7B;AACH;;AACD,eAAOD,QAAQ,CAACC,IAAhB;AACH,OAVE,CAAP;AAWH;;;WACD,kBAAS;AACLE,MAAAA,YAAY,CAACI,UAAb,CAAwB,MAAxB;AACH;;;WACD,kBAASZ,IAAT,EAAe;AACX,aAAOR,KAAK,CAACS,IAAN,CAAWH,OAAO,GAAG,UAArB,EAAiC;AACpCe,QAAAA,QAAQ,EAAEb,IAAI,CAACa,QADqB;AAEpCX,QAAAA,KAAK,EAAEF,IAAI,CAACE,KAFwB;AAGpCC,QAAAA,QAAQ,EAAEH,IAAI,CAACG;AAHqB,OAAjC,CAAP;AAKH;;;;;;AAEL,eAAe,IAAIJ,WAAJ,EAAf","sourcesContent":["import axios from 'axios';\naxios.defaults.headers.common = {\n    'X-Requested-With': 'XMLHttpRequest',\n    'X-CSRF-TOKEN': window.csrf_token\n};\nconst API_URL = 'http://localhost:4000/api/';\nclass AuthService {\n    login(user) {\n        return axios\n            .post(API_URL + 'sign_in', {\n                email: user.email,\n                password: user.password\n            })\n            .then(response => {\n                if (response.data.accessToken) {\n                    localStorage.setItem('user', JSON.stringify(response.data));\n                }\n                return response.data;\n            });\n    }\n    logout() {\n        localStorage.removeItem('user');\n    }\n    register(user) {\n        return axios.post(API_URL + 'register', {\n            username: user.username,\n            email: user.email,\n            password: user.password\n        });\n    }\n}\nexport default new AuthService();"]}]}